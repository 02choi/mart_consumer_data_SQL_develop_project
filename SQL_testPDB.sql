--고객정보 테이블 생성 후 데이터 임포트
CREATE TABLE "CUST_INFO"
(
    CUST_NO      NUMBER(6),
    ENTL_DIVS    CHAR(9),
    CUST_CLSS    CHAR(15),
    BRTH_DAY     CHAR(9),
    CUST_STUS    CHAR(12),
    ENTR_DT      CHAR(8),
    SCDE_DT      CHAR(8)
);
--임포트 결과 확인
SELECT * FROM CUST_INFO;
COMMIT;
--거래 테이블
CREATE TABLE "SELL_INFO"
(
    CUST_NO     VARCHAR2(6),
    ENTR_NM     NCHAR(9),
    BUY_DT      VARCHAR2(10),
    PROD_CD     NUMBER,
    PROD_NM     NVARCHAR2(100),
    BUY_AMT     VARCHAR2(50),
    BUY_CMT     NUMBER,
    RL_BUY_AMT  VARCHAR2(50),
    DCNT_AMT    VARCHAR2(50)
);
--임포트 결과 확인
SELECT * FROM SELL_INFO;
COMMIT;
--상품 테이블
CREATE TABLE "PROD_INFO"
(
    PROD_NO    NUMBER,
    LCLS_NM    VARCHAR2(50),
    MCLS_NM    VARCHAR2(50),
    SCLS_NM    VARCHAR2(50),
    PROD_NM    VARCHAR2(300),
    PUCS_PRC   VARCHAR2(20),
    SALE_PRC   VARCHAR2(20)
);
--임포트 결과 확인
SELECT * FROM PROD_INFO;
COMMIT;
--"BASIC"테이블 기초 데이터 형성
CREATE TABLE "BASIC" AS SELECT SELL_INFO.BUY_DT, CUST_INFO.CUST_NO, CUST_INFO.ENTL_DIVS, CUST_INFO.CUST_CLSS, CUST_INFO.BRTH_DAY, SELL_INFO.DCNT_AMT, SELL_INFO.BUY_CMT, SELL_INFO.RL_BUY_AMT, SELL_INFO.PROD_CD, SELL_INFO.PROD_NM, PROD_INFO.LCLS_NM FROM CUST_INFO INNER JOIN SELL_INFO ON CUST_INFO.CUST_NO = SELL_INFO.CUST_NO INNER JOIN PROD_INFO ON SELL_INFO.PROD_CD = PROD_INFO.PROD_NO;
--결과확인
SELECT * FROM "BASIC";
COMMIT;
--6,7월 데이터 테이블 생성
CREATE TABLE "BASIC6" AS SELECT * FROM "BASIC" WHERE SUBSTR(BUY_DT,1,6) IN ('202006');
SELECT * FROM "BASIC6";
CREATE TABLE "BASIC7" AS SELECT * FROM "BASIC" WHERE SUBSTR(BUY_DT,1,6) IN ('202007');
SELECT * FROM "BASIC7";
COMMIT;
--필요 데이터 컬럼 추출, 중복데이터 제거
CREATE TABLE "BASIC6_1" AS SELECT DISTINCT "BASIC6".CUST_NO, "BASIC6".ENTL_DIVS, "BASIC6".CUST_CLSS, "BASIC6".BRTH_DAY FROM "BASIC6";
SELECT * FROM BASIC6_1;
CREATE TABLE "BASIC7_1" AS SELECT DISTINCT "BASIC7".CUST_NO, "BASIC7".ENTL_DIVS, "BASIC7".CUST_CLSS, "BASIC7".BRTH_DAY FROM "BASIC7";
SELECT * FROM BASIC7_1;
--추가 데이터 추출
---기준년월
CREATE TABLE A_TABLE6 AS SELECT DISTINCT CUST_NO,TRUNC(BUY_DT/100) AS BASE_YYMM FROM "BASIC6";
SELECT * FROM "A_TABLE6";
CREATE TABLE A_TABLE7 AS SELECT DISTINCT CUST_NO,TRUNC(BUY_DT/100) AS BASE_YYMM FROM "BASIC7";
SELECT * FROM "A_TABLE7";
---고객연령
CREATE TABLE B_TABLE6 AS SELECT DISTINCT CUST_NO,(SUBSTR(BUY_DT,1,4) - SUBSTR(BRTH_DAY,1,4)) AS CUST_AGE FROM "BASIC6";
SELECT * FROM B_TABLE6;
CREATE TABLE B_TABLE7 AS SELECT DISTINCT CUST_NO,(SUBSTR(BUY_DT,1,4) - SUBSTR(BRTH_DAY,1,4)) AS CUST_AGE FROM "BASIC7";
SELECT * FROM B_TABLE7;
---고객연령대ID
CREATE TABLE C_TABLE6 AS SELECT DISTINCT CUST_NO,TRUNC(CUST_AGE/10) AS CUST_AGLV_ID FROM "B_TABLE6";
SELECT * FROM C_TABLE6;
UPDATE C_TABLE6 SET CUST_AGLV_ID='9' WHERE 10<=CUST_AGLV_ID;
SELECT * FROM C_TABLE6;
CREATE TABLE C_TABLE7 AS SELECT DISTINCT CUST_NO,TRUNC(CUST_AGE/10) AS CUST_AGLV_ID FROM "B_TABLE7";
SELECT * FROM C_TABLE7;
UPDATE C_TABLE7 SET CUST_AGLV_ID='9' WHERE 10<=CUST_AGLV_ID;
SELECT * FROM C_TABLE7;
---구매건수
CREATE TABLE D_TABLE6 AS SELECT DISTINCT CUST_NO,COUNT(CUST_NO) AS BUY_CNT FROM "BASIC6" GROUP BY CUST_NO ORDER BY CUST_NO;
SELECT * FROM D_TABLE6;
CREATE TABLE D_TABLE7 AS SELECT DISTINCT CUST_NO,COUNT(CUST_NO) AS BUY_CNT FROM "BASIC7" GROUP BY CUST_NO ORDER BY CUST_NO;
SELECT * FROM D_TABLE7;
---테이블 스페이스 확장
ALTER DATABASE DATAFILE 'D:\ORACLE\DATA_FILE1' RESIZE 10000M;
ALTER DATABASE DATAFILE 'D:\ORACLE\DATA_FILE1' AUTOEXTEND ON MAXSIZE UNLIMITED;
---테이블 조인(BASIC+A~D)
CREATE TABLE "BASIC6_2" AS SELECT A_TABLE6.BASE_YYMM, "BASIC6_1".CUST_NO, "BASIC6_1".ENTL_DIVS,"BASIC6_1".CUST_CLSS, "BASIC6_1".BRTH_DAY, B_TABLE6.CUST_AGE, C_TABLE6.CUST_AGLV_ID, D_TABLE6.BUY_CNT FROM "BASIC6_1"
    INNER JOIN A_TABLE6 ON "BASIC6_1".CUST_NO = A_TABLE6.CUST_NO
    INNER JOIN B_TABLE6 ON "BASIC6_1".CUST_NO = B_TABLE6.CUST_NO
    INNER JOIN C_TABLE6 ON "BASIC6_1".CUST_NO = C_TABLE6.CUST_NO
    INNER JOIN D_TABLE6 ON "BASIC6_1".CUST_NO = D_TABLE6.CUST_NO;
SELECT * FROM BASIC6_2;
CREATE TABLE "BASIC7_2" AS SELECT A_TABLE7.BASE_YYMM, "BASIC7_1".CUST_NO, "BASIC7_1".ENTL_DIVS,"BASIC7_1".CUST_CLSS, "BASIC7_1".BRTH_DAY, B_TABLE7.CUST_AGE, C_TABLE7.CUST_AGLV_ID, D_TABLE7.BUY_CNT FROM "BASIC7_1"
    INNER JOIN A_TABLE7 ON "BASIC7_1".CUST_NO = A_TABLE7.CUST_NO
    INNER JOIN B_TABLE7 ON "BASIC7_1".CUST_NO = B_TABLE7.CUST_NO
    INNER JOIN C_TABLE7 ON "BASIC7_1".CUST_NO = C_TABLE7.CUST_NO
    INNER JOIN D_TABLE7 ON "BASIC7_1".CUST_NO = D_TABLE7.CUST_NO;
SELECT * FROM BASIC7_2;
COMMIT;
---구매여부
CREATE TABLE E_TABLE6 AS SELECT  CUST_NO, CASE WHEN BUY_CNT !='0' THEN '1' WHEN BUY_CNT ='0' THEN '0' END AS BUY_YN FROM BASIC6_2 ORDER BY CUST_NO;
SELECT * FROM E_TABLE6;
CREATE TABLE E_TABLE7 AS SELECT  CUST_NO, CASE WHEN BUY_CNT !='0' THEN '1' WHEN BUY_CNT ='0' THEN '0' END AS BUY_YN FROM BASIC7_2 ORDER BY CUST_NO;
SELECT * FROM E_TABLE7;
---할인상품구매건수
CREATE TABLE E_TABLE6_1 AS SELECT CUST_NO, COUNT(DCNT_AMT) AS DCNT_PROD_BUY_CNT FROM "BASIC6" GROUP BY CUST_NO ORDER BY CUST_NO;
SELECT * FROM E_TABLE6_1;
CREATE TABLE E_TABLE7_1 AS SELECT CUST_NO, COUNT(DCNT_AMT) AS DCNT_PROD_BUY_CNT FROM "BASIC7" GROUP BY CUST_NO ORDER BY CUST_NO;
SELECT * FROM E_TABLE7_1;
---구매금액
CREATE TABLE F_TABLE6 AS SELECT CUST_NO, SUM(REPLACE(RL_BUY_AMT,',','')) AS BUY_AMT FROM "BASIC6" GROUP BY CUST_NO ORDER BY CUST_NO;
SELECT * FROM F_TABLE6;
CREATE TABLE F_TABLE7 AS SELECT CUST_NO, SUM(REPLACE(RL_BUY_AMT,',','')) AS BUY_AMT FROM "BASIC7" GROUP BY CUST_NO ORDER BY CUST_NO;
SELECT * FROM F_TABLE7;
--테이블 업데이트
CREATE TABLE BASIC6_0 AS SELECT BASIC6.*, D_TABLE6.BUY_CNT FROM BASIC6 INNER JOIN D_TABLE6 ON BASIC6.CUST_NO = D_TABLE6.CUST_NO;
SELECT * FROM BASIC6_0;
CREATE TABLE BASIC7_0 AS SELECT BASIC7.*, D_TABLE7.BUY_CNT FROM BASIC7 INNER JOIN D_TABLE7 ON BASIC7.CUST_NO = D_TABLE7.CUST_NO;
SELECT * FROM BASIC7_0;
--일자별 구매건수
CREATE TABLE L_TABLE6 AS SELECT BUY_DT, CUST_NO, COUNT(CUST_NO) AS BUY_DD_CNT FROM BASIC6 GROUP BY BUY_DT,CUST_NO;
CREATE TABLE L_TABLE7 AS SELECT BUY_DT, CUST_NO, COUNT(CUST_NO) AS BUY_DD_CNT FROM BASIC7 GROUP BY BUY_DT,CUST_NO;
CREATE TABLE BASIC6_01 AS SELECT BASIC6_0.*, L_TABLE6.BUY_DD_CNT FROM BASIC6_0 INNER JOIN L_TABLE6 ON BASIC6_0.CUST_NO = L_TABLE6.CUST_NO AND BASIC6_0.BUY_DT = L_TABLE6.BUY_DT;
SELECT * FROM BASIC6_01;
CREATE TABLE BASIC7_01 AS SELECT BASIC7_0.*, L_TABLE7.BUY_DD_CNT FROM BASIC7_0 INNER JOIN L_TABLE7 ON BASIC7_0.CUST_NO = L_TABLE7.CUST_NO AND BASIC7_0.BUY_DT = L_TABLE7.BUY_DT;
SELECT * FROM BASIC7_01;
---주구매일자
CREATE TABLE G_TABLE6 AS SELECT CUST_NO,BUY_DT, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DD_CNT DESC) AS DD_CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DT) AS DT_RAN FROM BASIC6_01;
SELECT * FROM G_TABLE6;
CREATE TABLE G_TABLE6_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY G_TABLE6.CUST_NO ORDER BY G_TABLE6.CUST_NO) AS ROW_NUM, G_TABLE6.* FROM G_TABLE6 ORDER BY G_TABLE6.CUST_NO;
CREATE TABLE G_TABLE6_2 AS SELECT CUST_NO,BUY_DT FROM G_TABLE6_1 WHERE G_TABLE6_1.ROW_NUM = 1;
SELECT * FROM G_TABLE6_2;
CREATE TABLE G_TABLE7 AS SELECT CUST_NO,BUY_DT,RL_BUY_AMT, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DD_CNT DESC) AS DD_CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DT) AS DT_RAN FROM BASIC7_01;
SELECT * FROM G_TABLE7;
CREATE TABLE G_TABLE7_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY G_TABLE7.CUST_NO ORDER BY G_TABLE7.CUST_NO) AS ROW_NUM, G_TABLE7.* FROM G_TABLE7 ORDER BY G_TABLE7.CUST_NO;
CREATE TABLE G_TABLE7_2 AS SELECT CUST_NO,BUY_DT FROM G_TABLE7_1 WHERE G_TABLE7_1.ROW_NUM = 1;
SELECT * FROM G_TABLE7_2;
--중간 커밋
COMMIT;
---주구매대분류명
CREATE TABLE H_TABLE6 AS SELECT CUST_NO,LCLS_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DD_CNT DESC) AS DD_CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY LCLS_NM DESC) AS LCLS_RAN FROM BASIC6_01;
SELECT * FROM H_TABLE6;
CREATE TABLE H_TABLE6_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY H_TABLE6.CUST_NO ORDER BY H_TABLE6.CUST_NO) AS ROW_NUM, H_TABLE6.* FROM H_TABLE6 ORDER BY H_TABLE6.CUST_NO;
CREATE TABLE H_TABLE6_2 AS SELECT CUST_NO,LCLS_NM FROM H_TABLE6_1 WHERE H_TABLE6_1.ROW_NUM = 1;
SELECT * FROM H_TABLE6_2;
CREATE TABLE H_TABLE7 AS SELECT CUST_NO,LCLS_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DD_CNT DESC) AS DD_CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY LCLS_NM DESC) AS LCLS_RAN FROM BASIC7_01;
SELECT * FROM H_TABLE7;
CREATE TABLE H_TABLE7_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY H_TABLE7.CUST_NO ORDER BY H_TABLE7.CUST_NO) AS ROW_NUM, H_TABLE7.* FROM H_TABLE7 ORDER BY H_TABLE7.CUST_NO;
CREATE TABLE H_TABLE7_2 AS SELECT CUST_NO,LCLS_NM FROM H_TABLE7_1 WHERE H_TABLE7_1.ROW_NUM = 1;
SELECT * FROM H_TABLE7_2;
---주구매상품번호, 주구매상품명
CREATE TABLE I_TABLE6 AS SELECT CUST_NO, PROD_CD, PROD_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DD_CNT DESC) AS DD_CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY PROD_CD DESC) AS CD_RAN FROM BASIC6_01;
SELECT * FROM I_TABLE6;
CREATE TABLE I_TABLE6_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY I_TABLE6.CUST_NO ORDER BY I_TABLE6.CUST_NO) AS ROW_NUM, I_TABLE6.* FROM I_TABLE6 ORDER BY I_TABLE6.CUST_NO;
CREATE TABLE I_TABLE6_2 AS SELECT CUST_NO, PROD_CD, PROD_NM FROM I_TABLE6_1 WHERE I_TABLE6_1.ROW_NUM = 1;
SELECT * FROM I_TABLE6_2;
CREATE TABLE I_TABLE7 AS SELECT CUST_NO, PROD_CD, PROD_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_DD_CNT DESC) AS DD_CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY PROD_CD DESC) AS CD_RAN FROM BASIC7_01;
SELECT * FROM I_TABLE7;
CREATE TABLE I_TABLE7_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY I_TABLE7.CUST_NO ORDER BY I_TABLE7.CUST_NO) AS ROW_NUM, I_TABLE7.* FROM I_TABLE7 ORDER BY I_TABLE7.CUST_NO;
CREATE TABLE I_TABLE7_2 AS SELECT CUST_NO, PROD_CD, PROD_NM FROM I_TABLE7_1 WHERE I_TABLE7_1.ROW_NUM = 1;
SELECT * FROM I_TABLE7_2;
--중간 커밋
COMMIT;
---최대구매비용대분류명
CREATE TABLE K_TABLE6 AS SELECT CUST_NO, LCLS_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CNT DESC) AS CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY LCLS_NM DESC) AS NM_RAN FROM BASIC6_01;
SELECT * FROM K_TABLE6;
CREATE TABLE K_TABLE6_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY K_TABLE6.CUST_NO ORDER BY K_TABLE6.CUST_NO) AS ROW_NUM, K_TABLE6.* FROM K_TABLE6 ORDER BY K_TABLE6.CUST_NO;
CREATE TABLE K_TABLE6_2 AS SELECT CUST_NO, LCLS_NM FROM K_TABLE6_1 WHERE K_TABLE6_1.ROW_NUM = 1;
SELECT * FROM K_TABLE6_2;
CREATE TABLE K_TABLE7 AS SELECT CUST_NO, LCLS_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CNT DESC) AS CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY LCLS_NM DESC) AS NM_RAN FROM BASIC7_01;
SELECT * FROM K_TABLE7;
CREATE TABLE K_TABLE7_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY K_TABLE7.CUST_NO ORDER BY K_TABLE7.CUST_NO) AS ROW_NUM, K_TABLE7.* FROM K_TABLE7 ORDER BY K_TABLE7.CUST_NO;
CREATE TABLE K_TABLE7_2 AS SELECT CUST_NO, LCLS_NM FROM K_TABLE7_1 WHERE K_TABLE7_1.ROW_NUM = 1;
SELECT * FROM K_TABLE7_2;
---, 최대구매비용상품번호, 최대구매비용상품명
CREATE TABLE N_TABLE6 AS SELECT CUST_NO, PROD_CD, PROD_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CNT DESC) AS CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY PROD_CD DESC) AS CD_RAN FROM BASIC6_01;
SELECT * FROM N_TABLE6;
CREATE TABLE N_TABLE6_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY N_TABLE6.CUST_NO ORDER BY N_TABLE6.CUST_NO) AS ROW_NUM, N_TABLE6.* FROM N_TABLE6 ORDER BY N_TABLE6.CUST_NO;
CREATE TABLE N_TABLE6_2 AS SELECT CUST_NO, PROD_CD, PROD_NM FROM N_TABLE6_1 WHERE N_TABLE6_1.ROW_NUM = 1;
SELECT * FROM N_TABLE6_2;
CREATE TABLE N_TABLE7 AS SELECT CUST_NO, PROD_CD, PROD_NM, RANK() OVER (PARTITION BY CUST_NO ORDER BY TO_NUMBER(REPLACE(RL_BUY_AMT,',','')) DESC) AS AMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CNT DESC) AS CNT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY BUY_CMT DESC) AS CMT_RAN, RANK() OVER (PARTITION BY CUST_NO ORDER BY PROD_CD DESC) AS CD_RAN FROM BASIC7_01;
SELECT * FROM N_TABLE7;
CREATE TABLE N_TABLE7_1 AS SELECT ROW_NUMBER() OVER(PARTITION BY N_TABLE7.CUST_NO ORDER BY N_TABLE7.CUST_NO) AS ROW_NUM, N_TABLE7.* FROM N_TABLE7 ORDER BY N_TABLE7.CUST_NO;
CREATE TABLE N_TABLE7_2 AS SELECT CUST_NO, PROD_CD, PROD_NM FROM N_TABLE7_1 WHERE N_TABLE7_1.ROW_NUM = 1;
SELECT * FROM N_TABLE7_2;
--중간 커밋
COMMIT;
---테이블 월별 조인(6월,7월)
CREATE TABLE "BASIC6_3" AS SELECT DISTINCT "BASIC6_2".*, E_TABLE6.BUY_YN, E_TABLE6_1.DCNT_PROD_BUY_CNT, F_TABLE6.BUY_AMT, G_TABLE6_2.BUY_DT AS MAIN_BUY_DTTM, H_TABLE6_2.LCLS_NM AS MAIN_BUY_LCLS_NM, I_TABLE6_2.PROD_CD AS MAIN_BUY_PROD_NO, I_TABLE6_2.PROD_NM AS MAIN_BUY_PROD_NM, K_TABLE6_2.LCLS_NM AS MAX_BUY_AMT_LCLS_NM, N_TABLE6_2.PROD_CD AS MAX_BUY_AMT_PROD_NO, N_TABLE6_2.PROD_NM AS MAX_BUY_AMT_PROD_NM FROM "BASIC6_2"
    INNER JOIN E_TABLE6 ON BASIC6_2.CUST_NO = E_TABLE6.CUST_NO
    INNER JOIN E_TABLE6_1 ON BASIC6_2.CUST_NO = E_TABLE6_1.CUST_NO
    INNER JOIN F_TABLE6 ON BASIC6_2.CUST_NO = F_TABLE6.CUST_NO
    INNER JOIN G_TABLE6_2 ON BASIC6_2.CUST_NO = G_TABLE6_2.CUST_NO
    INNER JOIN H_TABLE6_2 ON BASIC6_2.CUST_NO = H_TABLE6_2.CUST_NO
    INNER JOIN I_TABLE6_2 ON BASIC6_2.CUST_NO = I_TABLE6_2.CUST_NO
    INNER JOIN K_TABLE6_2 ON BASIC6_2.CUST_NO = K_TABLE6_2.CUST_NO
    INNER JOIN M_TABLE6_2 ON BASIC6_2.CUST_NO = M_TABLE6_2.CUST_NO
    INNER JOIN N_TABLE6_2 ON BASIC6_2.CUST_NO = N_TABLE6_2.CUST_NO;
SELECT * FROM BASIC6_3;
CREATE TABLE "BASIC7_3" AS SELECT DISTINCT "BASIC7_2".*, E_TABLE7.BUY_YN, E_TABLE7_1.DCNT_PROD_BUY_CNT, F_TABLE7.BUY_AMT, G_TABLE7_2.BUY_DT AS MAIN_BUY_DTTM, H_TABLE7_2.LCLS_NM AS MAIN_BUY_LCLS_NM, I_TABLE7_2.PROD_CD AS MAIN_BUY_PROD_NO, I_TABLE7_2.PROD_NM AS MAIN_BUY_PROD_NM, K_TABLE7_2.LCLS_NM AS MAX_BUY_AMT_LCLS_NM, N_TABLE7_2.PROD_CD AS MAX_BUY_AMT_PROD_NO, N_TABLE7_2.PROD_NM AS MAX_BUY_AMT_PROD_NM FROM "BASIC7_2"
    INNER JOIN E_TABLE7 ON BASIC7_2.CUST_NO = E_TABLE7.CUST_NO
    INNER JOIN E_TABLE7_1 ON BASIC7_2.CUST_NO = E_TABLE7_1.CUST_NO
    INNER JOIN F_TABLE7 ON BASIC7_2.CUST_NO = F_TABLE7.CUST_NO
    INNER JOIN G_TABLE7_2 ON BASIC7_2.CUST_NO = G_TABLE7_2.CUST_NO
    INNER JOIN H_TABLE7_2 ON BASIC7_2.CUST_NO = H_TABLE7_2.CUST_NO
    INNER JOIN I_TABLE7_2 ON BASIC7_2.CUST_NO = I_TABLE7_2.CUST_NO
    INNER JOIN K_TABLE7_2 ON BASIC7_2.CUST_NO = K_TABLE7_2.CUST_NO
    INNER JOIN M_TABLE7_2 ON BASIC7_2.CUST_NO = M_TABLE7_2.CUST_NO
    INNER JOIN N_TABLE7_2 ON BASIC7_2.CUST_NO = N_TABLE7_2.CUST_NO;
SELECT * FROM BASIC7_3;
--6,7월 테이블 결합
CREATE TABLE CUST_DEAL_MMLY_S AS SELECT * FROM BASIC6_3 UNION SELECT * FROM BASIC7_3;
SELECT * FROM CUST_DEAL_MMLY_S ORDER BY BASE_YYMM;
--중간 커밋
COMMIT;
--논리명(COMMENT) 추가
COMMENT ON TABLE CUST_DEAL_MMLY_S IS '고객거래월별집계';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.BASE_YYMM IS '기준년월';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.CUST_NO IS '고객번호';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.ENTL_DIVS IS '업장구분';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.CUST_CLSS IS '고객분류';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.BRTH_DAY IS '생년월일';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.CUST_AGE IS '고객연령';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.CUST_AGLV_ID IS '고객연령대ID';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.BUY_YN IS '구매여부';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.BUY_CNT IS '구매건수';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.DCNT_PROD_BUY_CNT IS '할인상품구매건수';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.BUY_AMT IS '구매금액';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.MAIN_BUY_DTTM IS '주구매일자';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.MAIN_BUY_LCLS_NM IS '주구매대분류명';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.MAIN_BUY_PROD_NO IS '주구매상품번호';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.MAIN_BUY_PROD_NM IS '주구매상품명';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.MAX_BUY_AMT_LCLS_NM IS '최대구매비용대분류명';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.MAX_BUY_AMT_PROD_NO IS '최대구매비용상품번호';
COMMENT ON COLUMN CUST_DEAL_MMLY_S.MAX_BUY_AMT_PROD_NM IS '최대구매비용상품명';
--편집기로 pk설정 후 최종 커밋 끝!!!!
COMMIT;
SELECT * FROM CUST_DEAL_MMLY_S ORDER BY BASE_YYMM;